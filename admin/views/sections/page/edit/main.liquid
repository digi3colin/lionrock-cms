{% assign block_types = "default" %}
{% assign page_type_name = "Default" %}

<script>
  document.addEventListener("trix-before-initialize", (it) => {
    // Change Trix.config if you need
    Trix.config.blockAttributes.default.tagName = "p"
    Trix.config.blockAttributes.default.breakOnReturn = true;

    Trix.config.blockAttributes.heading2 = {
      tagName: 'h2',
      terminal: true,
      breakOnReturn: true,
      group: false
    }

    const { toolbarElement } = event.target
    const h1Button = toolbarElement.querySelector("[data-trix-attribute=heading1]")
    h1Button.insertAdjacentHTML("afterend", `<button type="button" class="trix-button" data-trix-attribute="heading2" title="Heading 2" tabindex="-1" data-trix-active="">H2</button>`)

    Trix.getBlockConfig = (attr) => Trix.config.blockAttributes[attr];

    Trix.Block.prototype.breaksOnReturn = function(){
      const attr = this.getLastAttribute();
      const config = Trix.getBlockConfig(attr ? attr : "default");
      return config ? config.breakOnReturn : false;
    };
    Trix.LineBreakInsertion.prototype.shouldInsertBlockBreak = function(){
      if(this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {
        return this.startLocation.offset > 0
      } else {
        return !this.shouldBreakFormattedBlock() ? this.breaksOnReturn : false;
      }
    };
  })
</script>
<div class="container mx-auto">
  <form id="main-form" action="/admin/pages/{{ item.id }}?language={{ language |  default: "en" }}" method="post">
    <div class="flex flex-row">
      <div class="w-9/12 px-4">
        <div class="mb-4">
          {% render "page/edit/language", language: language, autosave: autosave %}
        </div>

        <div>
          <!-- values --->
          {% render 'page/edit/field-row', type: "text/basic",     label: "Name", selector: ".name", value: tokens.name, placeholder: placeholder.name %}
          {% render 'page/edit/field-row', type: "textarea/basic", label: "Body", selector: ".body", value: tokens.body, placeholder: placeholder.body %}
          {% render 'page/edit/field-row', type: "link/basic",     label: "Link", selector: ".link", value: tokens.link, placeholder: placeholder.link %}

          <hr/>
          <!-- items -->
          <div>
            {% assign item_name = 'items' %}
            {% assign item_label = 'Item' %}
            <div class="row mb-3 align-items-center"><div class="col-8"><h5><i class="far fa-copy me-2"></i>{{ item_label }}</h5></div><div class="col-4 text-end"></div></div>

            {% for pageItem in tokens[item_name] %}
              {% capture prefix %}.{{ item_name }}[{{ forloop.index0 }}]{% endcapture %}
              <div class="d-flex flex-row mb-3">
                {% render "page/edit/item/weight", prefix: prefix, weight: pageItem._weight %}
                <div class="me-2 w-100">
                  {% capture selector %}{{ prefix }}.name{% endcapture %}{% render 'pagefield/text/basic', label: "Name", value: pageItem.name, selector: selector %}
                  {% capture selector %}{{ prefix }}.body{% endcapture %}{% render 'pagefield/text/basic', label: "Body", value: pageItem.body, selector: selector %}
                </div>
                {% render "page/edit/item/add-button", index: forloop.index0, page_id:item.id, item_name: item_name %}
              </div>
            {% endfor %}
          </div>
          <!-- end items -->
          <hr/>
          {% render "page/edit/block/container", page_id: item.id, placeholder: placeholders.blocks, block_names: block_names, blocks: blocks, limits: block_types %}
        </div>
      </div>

      <div class="w-3/12">
        <div id="page-attributes" class="rounded border border-gray-200 bg-gray-100 px-4 p-4 mb-4">
          {% render 'pagefield/text/basic', label: "date", selector: "@date", value: tokens.date %}
        </div>

        <div id="page-tags" class="rounded border border-gray-200 bg-gray-100 px-4 p-4">
          {% render "page/edit/tag/input", page_id: item.id, label: "Categories", tag_group:"Categories", tag_options: tags.categories, tags: item.tags.categories %}
          {% render "page/edit/tag/input", page_id: item.id, label: "Topics", tag_group:"Topics", tag_options: tags.topics, tags: item.tags.topics %}
          {% render "page/edit/tag/input", page_id: item.id, label: "Collections", tag_group:"Collections", tag_options: tags.collections, tags: item.tags.collections %}
        </div>
      </div>
    </div>
  </form>
</div>
